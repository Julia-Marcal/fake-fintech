version: '3.4'

services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      monitoring:
        aliases:
          - app

  frontend:
    build:
      context: ./frontend
    ports:
      - "4200:4200"
    depends_on:
      - app
    networks:
      - monitoring
    restart: unless-stopped

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: api_db
    ports:
      - "5432:5432"
    networks:
      monitoring:
        aliases:
          - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      monitoring:
        aliases:
          - redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s

networks:
  monitoring:
    driver: bridge
